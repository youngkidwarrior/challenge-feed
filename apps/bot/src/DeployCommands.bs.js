// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "./Env.bs.js";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.bs.js";
import * as Commands_Help from "./commands/Commands_Help.bs.js";
import * as Rest from "@discordjs/rest";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";
import * as V9 from "discord-api-types/v9";

var DeployCommandsError = /* @__PURE__ */Caml_exceptions.create("DeployCommands.DeployCommandsError");

var Rest$1 = {};

var Routes = {};

Env.createEnv(undefined);

var envConfig = Env.getConfig(undefined);

var envConfig$1;

if (envConfig.TAG === /* Ok */0) {
  envConfig$1 = envConfig._0;
} else {
  throw {
        RE_EXN_ID: Env.EnvError,
        _1: envConfig._0,
        Error: new Error()
      };
}

var token = envConfig$1.discordApiToken;

var clientId = envConfig$1.discordClientId;

var guildId = envConfig$1.discordGuildId;

var exampleCommand = Commands_Help.data.toJSON();

var commands = [exampleCommand];

var rest = new Rest.REST({
        version: 9
      }).setToken(token);

var applicationGuildCommands = V9.Routes.applicationGuildCommands(clientId, guildId);

$$Promise.$$catch(rest.put(applicationGuildCommands, {
            body: commands
          }).then(function (param) {
          return Promise.resolve((console.log("Successfully registered application commands."), undefined));
        }), (function (e) {
        if (e.RE_EXN_ID === DeployCommandsError) {
          console.error("Deploy Commands Error:" + e._1);
        } else if (e.RE_EXN_ID === $$Promise.JsError) {
          var msg = e._1.message;
          if (msg !== undefined) {
            console.error("Deploy Commands Error: " + msg);
          } else {
            console.error("Must be some non-error value");
          }
        } else {
          console.error("Some unknown error");
        }
        return Promise.resolve(undefined);
      }));

export {
  DeployCommandsError ,
  Rest$1 as Rest,
  Routes ,
  envConfig$1 as envConfig,
  token ,
  clientId ,
  guildId ,
  exampleCommand ,
  commands ,
  rest ,
  applicationGuildCommands ,
  
}
/*  Not a pure module */
