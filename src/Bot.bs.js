// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Env = require("./Env.bs.js");
var Curry = require("rescript/lib/js/curry.js");
var Dotenv = require("dotenv");
var DiscordJs = require("discord.js");
var Commands_Help = require("./commands/Commands_Help.bs.js");

Dotenv.config();

var envConfig = Env.getConfig(undefined);

var envConfig$1;

if (envConfig.TAG === /* Ok */0) {
  envConfig$1 = envConfig._0;
} else {
  throw {
        RE_EXN_ID: Env.EnvError,
        _1: envConfig._0,
        Error: new Error()
      };
}

var activeChannelId = envConfig$1.discordChannelId;

var clientId = envConfig$1.discordClientId;

var options = {
  intents: [
    "GUILDS",
    "GUILD_MESSAGES"
  ]
};

var client = new DiscordJs.Client(options);

var commands = new DiscordJs.Collection();

commands.set(Commands_Help.data.name, {
      data: Commands_Help.data,
      execute: Commands_Help.execute
    });

function onMessage(message) {
  var channel = message.channel;
  var channelId = channel.id;
  if (channelId !== activeChannelId) {
    return ;
  }
  var hasAttachment = message.attachments.size > 0;
  var hasEmbed = message.embeds.size > 0;
  var hasLink = message.content.includes("http");
  var isBot = message.author.id === clientId;
  var allowed = hasAttachment || hasEmbed || hasLink || isBot;
  if (allowed) {
    return ;
  } else {
    message.delete();
    return ;
  }
}

function onInteraction(interaction) {
  if (interaction.isCommand()) {
    var commandName = interaction.commandName;
    var command = commands.get(commandName);
    if (command == null) {
      console.error("Bot.res: Command not found");
    } else {
      Curry._1(command.execute, interaction);
    }
    return ;
  }
  console.log("Not a command");
  
}

client.on("ready", (function (param) {
        console.log("Logged In");
        
      }));

client.on("messageCreate", onMessage);

client.on("interactionCreate", onInteraction);

var token = envConfig$1.discordApiToken;

client.login(token);

exports.envConfig = envConfig$1;
exports.activeChannelId = activeChannelId;
exports.clientId = clientId;
exports.options = options;
exports.client = client;
exports.commands = commands;
exports.onMessage = onMessage;
exports.onInteraction = onInteraction;
exports.token = token;
/*  Not a pure module */
